name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Backend
        run: cargo build --release --target x86_64-unknown-linux-musl
        working-directory: backend
      - name: Download Frontend Deps
        run: yarn install
        working-directory: gui
      - name: Build Frontend
        run: yarn build
        working-directory: gui
      - name: Combine Rust binary with frontend
        run: |
          mkdir -p /tmp/output
          cp backend/target/x86_64-unknown-linux-musl/release/nebula-admin-panel /tmp/output/
          cp -r gui/dist/ /tmp/output/
      - uses: actions/upload-artifact@v3
        with:
          name: nebula-admin-panel-linux-x86-64
          path: /tmp/output/
